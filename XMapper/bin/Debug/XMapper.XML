<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XMapper</name>
    </assembly>
    <members>
        <member name="T:XMapper.Config.MapperConfig">
            <summary>
            映射配置项
            </summary>
        </member>
        <member name="P:XMapper.Config.MapperConfig.List">
            <summary>
            配置的类型对集合
            </summary>
        </member>
        <member name="M:XMapper.Config.MapperConfig.Map``2">
            <summary>
            配置一个类型对映射转换
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <returns>返回类型对</returns>
        </member>
        <member name="M:XMapper.Config.MapperConfig.Map``2(System.Func{``0,``1})">
            <summary>
            使用一个转换方法配置一个映射转换
            该转换的优先级高于普通类型对
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <param name="mapper">转换方法</param>
        </member>
        <member name="M:XMapper.Config.MapperConfig.Map``2(XMapper.Core.BaseMapper{``0,``1})">
            <summary>
            使用一个转换类对象配置一个映射转换
            该转换的优先级高于普通类型对和转换方法的配置
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <param name="mapper">转换对象</param>
        </member>
        <member name="M:XMapper.Config.MapperConfig.GetMap(System.Type,System.Type)">
            <summary>
            获取指定类型的转换配置
            </summary>
            <param name="sourceType">源类型</param>
            <param name="targetType">目标类型</param>
            <returns></returns>
        </member>
        <member name="M:XMapper.Config.MapperConfig.GetMap``2">
            <summary>
            获取指定类型的转换配置
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <returns></returns>
        </member>
        <member name="T:XMapper.Config.PropertyPair">
            <summary>
            属性配置
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.IsIgnore">
            <summary>
            是否忽略该属性的映射
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.IsUseSolver">
            <summary>
            是否使用源类型相关的表达式映射
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.IsUseInstance">
            <summary>
            是否在转换时使用实例赋值
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.ResultPropertyName">
            <summary>
            目标属性名称
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.SourcePropertyName">
            <summary>
            源属性名称
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.ResultPropertyType">
            <summary>
            目标属性类型
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.SourcePropertyType">
            <summary>
            源属性类型
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.Solver">
            <summary>
            目标属性转换时使用的与源类型相关的表达式映射
            </summary>
        </member>
        <member name="P:XMapper.Config.PropertyPair.Instance">
            <summary>
            目标属性转换时使用的实例对象
            </summary>
        </member>
        <member name="T:XMapper.Config.TypePair">
            <summary>
            类型对基类
            名称相同的属性默认自动绑定
            本类型绑定方法和忽略方法中所有表示属性的表达式均表示表达式或公开字段
            </summary>
        </member>
        <member name="P:XMapper.Config.TypePair.SourceType">
            <summary>
            源类型
            </summary>
        </member>
        <member name="P:XMapper.Config.TypePair.ResultType">
            <summary>
            目标类型
            </summary>
        </member>
        <member name="P:XMapper.Config.TypePair.PropertyPairs">
            <summary>
            类型配置要转换的属性列表
            </summary>
        </member>
        <member name="T:XMapper.Config.TypePair`2">
            <summary>
            泛型的类型对
            名称相同的属性默认自动绑定
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
        </member>
        <member name="M:XMapper.Config.TypePair`2.Bind``2(System.Linq.Expressions.Expression{System.Func{`1,``1}},System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            绑定一个属性对
            </summary>
            <typeparam name="TSourceProperty">源属性类型</typeparam>
            <typeparam name="TResultProperty">目标属性类型</typeparam>
            <param name="resultProperty">目标属性表达式</param>
            <param name="sourceProperty">源属性表达式</param>
            <returns>返回当前类型对</returns>
        </member>
        <member name="M:XMapper.Config.TypePair`2.Bind``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},``0)">
            <summary>
            为目标属性绑定一个实例
            </summary>
            <typeparam name="TProperty">目标属性类型</typeparam>
            <param name="resultProperty">目标属性表达式</param>
            <param name="instance">要绑定的实例对象</param>
            <returns>返回当前类型对</returns>
        </member>
        <member name="M:XMapper.Config.TypePair`2.Ignore(System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            忽略一个或多个目标属性的转换
            </summary>
            <param name="resultProperties">要忽略的目标属性的列表</param>
            <returns>返回当前类型对</returns>
        </member>
        <member name="T:XMapper.Core.BaseMapper">
            <summary>
            基础转换对象抽象类
            </summary>
        </member>
        <member name="T:XMapper.Core.BaseMapper`2">
            <summary>
            泛型转换对象抽象类
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
        </member>
        <member name="F:XMapper.Core.BaseMapper`2.sourceType">
            <summary>
            源类型
            </summary>
        </member>
        <member name="F:XMapper.Core.BaseMapper`2.targetType">
            <summary>
            目标类型
            </summary>
        </member>
        <member name="F:XMapper.Core.BaseMapper`2.realSourceType">
            <summary>
            源类型（Nullable的非空类型）
            </summary>
        </member>
        <member name="F:XMapper.Core.BaseMapper`2.realTargetType">
            目标类型（Nullable的非空类型）
        </member>
        <member name="M:XMapper.Core.BaseMapper`2.Map(`0,`1)">
            <summary>
            基础属性转换方法
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
            <returns></returns>
        </member>
        <member name="M:XMapper.Core.BaseMapper`2.SetMapsCoreInner(`0,`1)">
            <summary>
            复杂属性转换方法，一般没有递归属性不需要重写本方法
            </summary>
            <param name="source">源对象</param>
            <param name="target">目标对象</param>
        </member>
        <member name="T:XMapper.Mapper">
            <summary>
            XMapper主入口类
            </summary>
        </member>
        <member name="P:XMapper.Mapper.Config">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:XMapper.Mapper.Init(System.Action{XMapper.Config.MapperConfig})">
            <summary>
            初始化配置
            </summary>
            <param name="action">配置方法</param>
        </member>
        <member name="M:XMapper.Mapper.Map``1(System.Object)">
            <summary>
            源对象类型未知时的转换方法
            </summary>
            <typeparam name="TTarget">目标类型</typeparam>
            <param name="source">源对象</param>
            <returns>返回转换后的目标对象</returns>
        </member>
        <member name="M:XMapper.Mapper.Map``2(``0,``1)">
            <summary>
            转换方法
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目标类型</typeparam>
            <param name="source">源对象</param>
            <param name="result">目标对象</param>
            <returns>转换后的目标对象</returns>
        </member>
    </members>
</doc>
